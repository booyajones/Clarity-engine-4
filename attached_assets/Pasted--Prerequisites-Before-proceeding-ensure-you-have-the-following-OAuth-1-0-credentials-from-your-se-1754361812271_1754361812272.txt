üîê Prerequisites
Before proceeding, ensure you have the following OAuth 1.0 credentials from your service provider (e.g., Twitter, Xero, etc.):

consumer_key

consumer_secret

token (a.k.a. access token)

token_secret

Signature method (usually HMAC-SHA1)

Request URL and method (e.g., GET, POST)

üß™ Example: Authorized GET Request with curl
You can manually build the Authorization header or use a tool. Here's a sample manual approach using curl:

bash
Copy
Edit
curl --request GET \
  --url 'https://api.example.com/resource' \
  --header 'Authorization: OAuth oauth_consumer_key="YOUR_CONSUMER_KEY", oauth_token="YOUR_ACCESS_TOKEN", oauth_signature_method="HMAC-SHA1", oauth_timestamp="TIMESTAMP", oauth_nonce="NONCE", oauth_version="1.0", oauth_signature="GENERATED_SIGNATURE"'
You must replace the placeholders:

oauth_timestamp: Current Unix timestamp.

oauth_nonce: A unique, random string.

oauth_signature: A valid HMAC-SHA1 signature generated from all the above and your secrets.

üîß Generating the OAuth 1.0 Signature
This is the hardest part. You need to:

Create the Signature Base String:

Copy
Edit
HTTP_METHOD&url_encoded_base_url&url_encoded_parameter_string
Create the Signing Key:

arduino
Copy
Edit
url_encode(consumer_secret) + '&' + url_encode(token_secret)
Calculate the HMAC-SHA1 Signature and Base64-encode the result.

Example in Bash using openssl:

bash
Copy
Edit
SIGNATURE=$(echo -n "$BASE_STRING" | openssl dgst -sha1 -hmac "$SIGNING_KEY" -binary | base64)
üõ†Ô∏è Easier Alternative: Use oauth tool (Optional)
If you're using a Unix system, you can install oauth or use Python/Ruby helpers to sign the request automatically.

Example using oauth:

bash
Copy
Edit
oauth-sign \
  --consumer-key 'YOUR_CONSUMER_KEY' \
  --consumer-secret 'YOUR_CONSUMER_SECRET' \
  --token 'YOUR_ACCESS_TOKEN' \
  --token-secret 'YOUR_ACCESS_SECRET' \
  --method 'GET' \
  --url 'https://api.example.com/resource'
‚úÖ Tips
Make sure all parameters are URL-encoded exactly once.

OAuth 1.0 is very strict‚Äîeven one incorrect space or encoding will cause a 401 error.

Use tools or libraries (Postman, Python requests-oauthlib, or oauth-1.0a for Node.js) if you can avoid building it manually.